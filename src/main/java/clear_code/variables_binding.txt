1. Во всех сущностях (в понятиях ORM framework-ов), в случае с переменными, хранящие листы/мапы/сеты я всегда явно и сразу
  присваиваю пустой лист/сет/мапу потому как нет гарантий что та или иная ORM сделает это за меня и при обращении не будет NPE.

  Итог: Переменный присваиваются во время вызова любого из конструкторов.
  Какую проблему решили: Отвязались от фактической реализации ORM фреймворка, нивелировали риск потенциального возникновения NPE.
2. private static final String EMAIL_FIELD_ID = "Email";
  В Mapper классе, эта и все подобные переменные, описывающие название той или иной переменной в xml документе вынесены
  в константы, в связи с тем, что обращение к этим переменным происходит в разных методах класса и теоретически названия
  этих полей могут измениться.

  Итог: Переменные присваиваются во время компиляции
  Какую проблему решили: В случае изменении контракта, нам необходимо лишь в одном месте изменить значение переменной.
3. Переменные, которые необходимо менять очень часто, я выношу в Property файлы, которые эти самые переменые берут из
  переменных окружения (переданных в контейнер для запуска). Это очень удобно, потому как не нужно пересобирать образ,
  а достаточно всего лишь поменять переменную окружения в оркестраторе (configmap k8s) и перезапустить контейнеры.

  - Итог: Переменные присваиваются в runtime,
  - Какую проблему решили: В случае необходимости изменения той или иной переменной слишком часто (количество возвращаемых
  объектов за один запрос, значение ratelimiter, хост интеграции зависимый от стенда etc), нам необходимо лишь изменить
  переменные окружения и не нужно пересобирать образ/jar/etc нашего приложения.
  - Потенциальные проблемы: Если выносить в переменные окружения настройки самого приложения (активация разных служб безопасности,
  хосты etc), то злоумышленник, у которого будет доступ к настройкам окружения может потенциально сделать 0-day уязвимость,
  которая не сразу обнаружится.